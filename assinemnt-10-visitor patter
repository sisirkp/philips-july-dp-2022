![Design Diagram](assignemnet-10-visitor--pattern.png)

using System;
using System.Collections.Generic;

//Object Structure
public class Image
{
    List<Shape> _structure = new List<Shape>();

    public void Plot(List<ShapePlotter> plotters)
    {
        //M*N cartesian product
        foreach (Shape s in _structure)
        {
            foreach (ShapePlotter p in plotters)
            {
                s.Plot(p);
            }
        }
    }
}

public abstract class Shape
{
    public abstract void Plot(ShapePlotter plotter);
}
public class Rectangle : Shape
{
    public string GeHeightAndWidth() { return "R.H.W"; }
    public override void Plot(ShapePlotter plotter)
    {
        plotter.Plot(this);
    }
}
public abstract class Circle : Shape
{
    public string GetRadius() { return "C.R"; }
    public override void Plot(ShapePlotter plotter)
    {
        plotter.Plot(this);
    }
}
public abstract class Polygon : Shape
{
    public string GetSides() { return "P.S"; }
    public override void Plot(ShapePlotter plotter)
    {
        plotter.Plot(this);
    }
}

public abstract class ShapePlotter
{
    public abstract void Plot(Rectangle shape);
    public abstract void Plot(Circle shape);
    public abstract void Plot(Polygon shape);
}
public class LaserPrinter : ShapePlotter
{
    public override void Plot(Rectangle shape) { }
    public override void Plot(Circle shape) { }
    public override void Plot(Polygon shape) { }
}
public class InkJetPrinter : ShapePlotter
{
    public override void Plot(Rectangle shape)
    {
        Console.WriteLine(shape.GeHeightAndWidth());
    }

    public override void Plot(Circle shape)
    {
        Console.WriteLine(shape.GetRadius());
    }

    public override void Plot(Polygon shape)
    {
        Console.WriteLine(shape.GetSides());
    }
}
